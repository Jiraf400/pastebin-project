version: '3.8'
services:

  keycloak-mysql:
    container_name: keycloak-mysql
    image: mysql:5.7
    volumes:
      - ./mysql_keycloak_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: keycloak
      MYSQL_USER: keycloak
      MYSQL_PASSWORD: password

  postgres-store:
    image: postgres
    container_name: postgres-store.yml
    environment:
      - POSTGRES_DB=store-service
      - POSTGRES_USER=store
      - POSTGRES_PASSWORD=password
      - GDATA=/data/postgres
    volumes:
      - ./postgres-store.yml:/data/postgres
    ports:
      - "5431:5431"
    command: -p 5431
    expose:
      - "5431"
    restart: always

  postgres-hash:
    image: postgres
    container_name: postgres-hash
    environment:
      - POSTGRES_DB=hash-service
      - POSTGRES_USER=hash
      - POSTGRES_PASSWORD=password
      - GDATA=/data/postgres
    volumes:
      - ./postgres-hash:/data/postgres
    ports:
      - "5432:5432"
    restart: always

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.5.3
    container_name: elasticsearch_springboot
    environment:
      - "bootstrap.memory_lock=true"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.type=single-node"
      - "xpack.security.enabled=false"
    ports:
      - "9200:9200"
    volumes:
      - ./elasticsearch_data:/var/lib/elasticsearch/data
      - ./elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro

  kibana:
    image: docker.elastic.co/kibana/kibana:8.5.3
    container_name: kibana_springboot
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
    depends_on:
      - elasticsearch

  logstash:
    image: docker.elastic.co/logstash/logstash:8.5.3
    container_name: logstash_springboot
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    depends_on:
      - elasticsearch

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:18.0.0
    command: [ "start-dev", "--import-realm" ]
    environment:
      DB_VENDOR: MYSQL
      DB_ADDR: mysql
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8080:8080"
    volumes:
      - ./realms/:/opt/keycloak/data/import/
    depends_on:
      - keycloak-mysql

  pastebin-redis:
    image: redis/redis-stack-server:latest
    container_name: pastebin-redis
    ports:
      - "6379:6379"

  pastebin-rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: pastebin-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    ports:
      - "5672:5672"
      - "15672:15672"

  eureka-server:
    image: registry.hub.docker.com/jirafus400/eureka-server:latest
    container_name: eureka-server
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  api-gateway:
    image: registry.hub.docker.com/jirafus400/api-gateway:latest
    container_name: api-gateway
    ports:
      - "9191:9191"
    expose:
      - "9191"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY=TRACE
    depends_on:
      - eureka-server
      - keycloak

  post-service:
    image: registry.hub.docker.com/jirafus400/post-service:latest
    container_name: post-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - eureka-server
      - api-gateway
      - pastebin-redis

  store-service:
    image: registry.hub.docker.com/jirafus400/store-service:latest
    container_name: store-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-store:5431/store-service
    depends_on:
      - postgres-store
      - eureka-server
      - api-gateway

  hash-generator-service:
    image: registry.hub.docker.com/jirafus400/hash-generator-service:latest
    container_name: hash-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-hash:5432/hash-service
    depends_on:
      - postgres-hash
      - eureka-server
      - api-gateway
